<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[zeroJAVA入门2来源于imooc]]></title>
    <url>%2F2018%2F04%2F19%2Fzero-JAVA%E5%85%A5%E9%97%A82%E6%9D%A5%E6%BA%90%E4%BA%8Eimooc%2F</url>
    <content type="text"><![CDATA[ZERO JAVA入门2继承java是单继承的，子类继承父类的所有属性和方法，（private修饰的无效哦），实现代码复用。语法格式：用eclipse建立newclass时该怎样建立关联呢？ 方法的重写 什么是方法的重写：如果子类对继承父类的方法不满意，是可以重写继承父类的方法，当调用方法时会优先调用子类的方法。 语法规则：a、返回值类型b、参数类型及个数c、方法名都要与父类的方法相同才叫方法的重写 继承的初始化顺序 初始化父类再初始化子类 先执行初始化对象的属性，再执行构造方法中的初始化。 java中的final关键字使用final关键字做标识有“最终”的含义final可以修饰类，方法，属性和变量。final修饰类的时候则该类不允许被继承，final修饰方法时，则该方法不允许被覆盖（重写），final修饰属性时，则该类的属性不会进行 隐式的初始化（类的初始化必须有值），或者在构造方法时赋值（只能二选一）final修饰变量时，则该变量只能赋一次值，即变为常量。# ZERO JAVA入门2 继承java是单继承的，子类继承父类的所有属性和方法，（private修饰的无效哦），实现代码复用。语法格式：用eclipse建立newclass时该怎样建立关联呢？ 方法的重写 什么是方法的重写：如果子类对继承父类的方法不满意，是可以重写继承父类的方法，当调用方法时会优先调用子类的方法。 语法规则：a、返回值类型b、参数类型及个数c、方法名都要与父类的方法相同才叫方法的重写 继承的初始化顺序 初始化父类再初始化子类 先执行初始化对象的属性，再执行构造方法中的初始化。 java中的final关键字使用final关键字做标识有“最终”的含义final可以修饰类，方法，属性和变量。final修饰类的时候则该类不允许被继承，final修饰方法时，则该方法不允许被覆盖（重写），final修饰属性时，则该类的属性不会进行 隐式的初始化（类的初始化必须有值），或者在构造方法时赋值（只能二选一）final修饰变量时，则该变量只能赋一次值，即变为常量。]]></content>
  </entry>
  <entry>
    <title><![CDATA[zero的java入门来源自慕课网]]></title>
    <url>%2F2018%2F04%2F19%2Fzero%E7%9A%84java%E5%85%A5%E9%97%A8%E6%9D%A5%E6%BA%90%E8%87%AA%E6%85%95%E8%AF%BE%E7%BD%91%2F</url>
    <content type="text"><![CDATA[ZERO JAVA入门1Java 中的 static 使用之静态变量Java 中被 static修饰的成员称为静态成员或类成员。它属于整个类所有，而不是某个对象所有，即被类的所有对象所共享。静态成员可以使用类名直接访问，也可以使用对象名进行访问。当然，鉴于他作用的特殊性更推荐用类名访问~~使用 static 可以修饰变量、方法和代码块。例如，我们在类中定义了一个 静态变量 hobby ，操作代码如下所示：运行结果： Java 中的 static 使用之静态方法与静态变量一样，我们也可以使用 static 修饰方法，称为静态方法或类方法。其实之前我们一直写的 main 方法就是静态方法。静态方法的使用如：运行结果：需要注意：1、 静态方法中可以直接调用同类中的静态成员，但不能直接调用非静态成员。如：如果希望在静态方法中调用非静态变量，可以通过创建类的对象，然后通过对象来访问非静态变量。如:2、在普通成员方法中，则可以直接访问同类的非静态变量和静态变量，如下所示：3、 静态方法中不能直接调用非静态方法，需要通过对象来访问非静态方法。如： Java 中的 static 使用之静态初始化块Java 中可以通过初始化块进行数据赋值。如：在类的声明中，可以包含多个初始化块，当创建类的实例时，就会依次执行这些代码块。如果使用static修饰初始化块，就称为静态初始化块。需要特别注意：静态初始化块只在类加载时执行，且只会执行一次，同时静态初始化块只能给静态变量赋值，不能初始化普通的成员变量。我们来看一段代码：运行结果： java中的访问修饰符一般用public修饰方法，用private修饰变量添加set,get方法 Java 中的内部类问：什么是内部类呢？ 答：内部类（ Inner Class ）就是定义在另外一个类里面的类。与之对应，包含内部类的类被称为外部类。 问：那为什么要将一个类定义在另一个类里面呢？清清爽爽的独立的一个类多好啊！！ 答：内部类的主要作用如下： 内部类提供了更好的封装，可以把内部类隐藏在外部类之内，不允许同一个包中的其他类访问该类 内部类的方法可以直接访问外部类的所有数据，包括私有的数据 内部类所实现的功能使用外部类同样可以实现，只是有时使用内部类更方便程序演示： //外部类HelloWorld public class HelloWorld { // 内部类Inner，类Inner在类HelloWorld的内部 public class Inner { // 内部类的方法 public void show() { System.out.println(&quot;welcome to imooc!&quot;); } } public static void main(String[] args) { // 创建外部类对象 HelloWorld hello = new HelloWorld(); // 创建内部类对象 Inner i = hello.new Inner(); // 调用内部类对象的方法 i.show(); } } 问：内部类有几种呢？ 成员内部类 静态内部类 方法内部类 匿名内部类 Java 中的成员内部类内部类中最常见的就是成员内部类，也称为普通内部类。我们来看如下代码：运行结果为：a: 99b: 2从上面的代码中我们可以看到，成员内部类的使用方法： 1、 Inner 类定义在 Outer 类的内部，相当于 Outer 类的一个成员变量的位置，Inner 类可以使用任意访问控制符，如 public 、 protected 、 private 等 2、 Inner 类中定义的 test() 方法可以直接访问 Outer 类中的数据，而不受访问控制符的影响，如直接访问 Outer 类中的私有属性a 3、 定义了成员内部类后，必须使用外部类对象来创建内部类对象，而不能直接去 new 一个内部类对象，即：内部类 对象名 = 外部类对象.new 内部类( );关于内部类的提示：1、 外部类是不能直接使用内部类的成员和方法滴可先创建内部类的对象，然后通过内部类的对象来访问其成员变量和方法。2、 如果外部类和内部类具有相同的成员变量或方法，内部类默认访问自己的成员变量或方法，如果要访问外部类的成员变量，可以使用 this 关键字。如： Java 中的静态内部类静态内部类是 static 修饰的内部类，这种内部类的特点是： 1、 静态内部类不能直接访问外部类的非静态成员，但可以通过 new 外部类().成员 的方式访问 2、 如果外部类的静态成员与内部类的成员名称相同，可通过“类名.静态成员”访问外部类的静态成员；如果外部类的静态成员与内部类的成员名称不相同，则可通过“成员名”直接调用外部类的静态成员3、 创建静态内部类的对象时，不需要外部类的对象，可以直接创建 内部类 对象名= new 内部类();运行结果 ：访问外部类中的b:1访问内部类中的b:2 Java 中的方法内部类方法内部类就是内部类定义在外部类的方法中，方法内部类只在该方法的内部可见，即只在该方法内可以使用。一定要注意哦：由于方法内部类不能在外部类的方法以外的地方使用，因此方法内部类不能使用访问控制符和 static 修饰符。]]></content>
  </entry>
  <entry>
    <title><![CDATA[前端小白初识JavaScript第二天]]></title>
    <url>%2F2018%2F04%2F19%2F%E5%89%8D%E7%AB%AF%E5%B0%8F%E7%99%BD%E5%88%9D%E8%AF%86JavaScript%E7%AC%AC%E4%BA%8C%E5%A4%A9%2F</url>
    <content type="text"><![CDATA[前端小白初识JavaScript第二天在这里我就不去写那些我会的了，反正是自己的笔记，也没人进来 踩，对就是这样 。哼 JavaScript-确认（confirm 消息对话框）1234567&lt;script type=&quot;text/javascript&quot;&gt; var mymessage=confirm(&quot;你喜欢JavaScript吗?&quot;); if(mymessage==true) &#123; document.write(&quot;很好,加油!&quot;); &#125; else &#123; document.write(&quot;JS功能强大，要学习噢!&quot;); &#125;&lt;/script&gt; 注: 消息对话框是排它的，即用户在点击对话框按钮前，不能进行任何其它操作。 JavaScript-提问（prompt 消息对话框）12345var myname=prompt(&quot;请输入你的姓名:&quot;);if(myname!=null) &#123; alert(&quot;你好&quot;+myname); &#125;else &#123; alert(&quot;你好 my friend.&quot;); &#125; 注:在用户点击对话框的按钮前，不能进行任何其它操作。 JavaScript-打开新窗口（window.open）语法： window.open([URL], [窗口名称], [参数字符串]) 123456789101112URL：可选参数，在窗口中要显示网页的网址或路径。如果省略这个参数，或者它的值是空字符串，那么窗口就不显示任何文档。窗口名称：可选参数，被打开窗口的名称。 1.该名称由字母、数字和下划线字符组成。 2.&quot;_top&quot;、&quot;_blank&quot;、&quot;_self&quot;具有特殊意义的名称。 _blank：在新窗口显示目标网页 _self：在当前窗口显示目标网页 _top：框架网页中在上部窗口中显示目标网页 3.相同 name 的窗口只能创建一个，要想创建多个窗口则 name 不能相同。 4.name 不能包含有空格。 参数字符串：可选参数，设置窗口参数，各参数用逗号隔开。 打开慕课网主页，将在新窗体中打开，宽为600，高为400，距屏顶100像素，屏左0像素。当点击按钮时，打开新窗口。123window.open(&apos;http://www.imooc.com&apos;,&apos;_blank&apos;,&apos;width=300,height=400,top=100,left=0&apos;); JavaScript-关闭窗口（window.close）close()关闭窗口 用法：12window.close(); //关闭本窗口&lt;窗口对象&gt;.close(); //关闭指定的窗口 例如:关闭新建的窗口。 12345&lt;script type=&quot;text/javascript&quot;&gt; var mywin=window.open(&apos;http://www.imooc.com&apos;); //将新打的窗口对象，存储在变量mywin中 mywin.close();&lt;/script&gt; 注意:上面代码在打开新窗口的同时，关闭该窗口，看不到被打开的窗口。任务1、新窗口打开时弹出确认框，是否打开 提示: 使用 if 判断确认框是否点击了确定，如点击弹出输入对话框，否则没有任何操作。2、通过输入对话框，确定打开的网址，默认为 http：//www.imooc.com/3、打开的窗口要求，宽400像素，高500像素，无菜单栏、无工具栏。12345678910111213141516171819202122232425262728293031&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;title&gt; new document &lt;/title&gt; &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=gbk&quot;/&gt; &lt;script type=&quot;text/javascript&quot;&gt; function openwindow()&#123; var open=confirm(&quot;是否打开新网址&quot;); if(open==true)&#123; var url=prompt(&quot;请输入你要访问的网址:&quot;,&quot;http：//www.imooc.com/&quot;); if(url!=null)&#123; window.open(&quot;http：//www.imooc.com/&quot;,&quot;width=400, height=500,menubar=no, toolbar=no&quot;,&quot;_blank&quot;); &#125; else&#123;alert(再见);&#125; &#125; else&#123;alert(再见);&#125; // 新窗口打开时弹出确认框，是否打开 // 通过输入对话框，确定打开的网址，默认为http：//www.imooc.com/ //打开的窗口要求，宽400像素， 高500像素，无菜单栏、无工具栏。 &#125; &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;input type=&quot;button&quot; value=&quot;新窗口打开网站&quot; onclick=&quot;openWindow()&quot; /&gt; &lt;/body&gt;&lt;/html&gt; innerHTML 属性innerHTML 属性用于获取或替换 HTML 元素的内容。 语法: Object.innerHTML注意: 1.Object是获取的元素对象，如通过document.getElementById(“ID”)获取的元素。 2.注意书写，innerHTML区分大小写。我们通过id=”con”获取 元素，并将元素的内容输出和改变元素内容，代码如下:输出结果为： 改变 HTML 样式HTML DOM 允许 JavaScript 改变 HTML 元素的样式。如何改变 HTML 元素的样式呢？语法: Object.style.property=new style;注意:Object是获取的元素对象，如通过document.getElementById(“id”)获取的元素。基本属性表（property）:改变 元素的样式，将颜色改为红色，字号改为20,背景颜色改为蓝：1234567&lt;p id=&quot;pcon&quot;&gt;Hello World!&lt;/p&gt;&lt;script&gt; var mychar = document.getElementById(&quot;pcon&quot;); mychar.style.color=&quot;red&quot;; mychar.style.fontSize=&quot;20&quot;; mychar.style.backgroundColor =&quot;blue&quot;;&lt;/script&gt; 控制类名（className 属性）12345678function add()&#123; var p1 = document.getElementById(&quot;p1&quot;); p1.className=&quot;one&quot;;//className &#125; function modify()&#123; var p2 = document.getElementById(&quot;p2&quot;); p2.className=&quot;two&quot;;//two是class的名字 &#125;]]></content>
  </entry>
  <entry>
    <title><![CDATA[CSS3从入门到放弃]]></title>
    <url>%2F2018%2F04%2F15%2FCSS3%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%83%2F</url>
    <content type="text"><![CDATA[Zero学习CSS3第一天什么是CSS3?CSS3是CSS2的升级版本，3只是版本号，它在CSS2.1的基础上增加了很多强大的新功能。 目前主流浏览器chrome、safari、firefox、opera、甚至360都已经支持了CSS3大部分功能了，IE10以后也开始全面支持CSS3了。 在编写CSS3样式时，不同的浏览器可能需要不同的前缀。它表示该CSS属性或规则尚未成为W3C标准的一部分，是浏览器的私有属性，虽然目前较新版本的浏览器都是不需要前缀的，但为了更好的向前兼容前缀还是少不了的。 CSS3能做什么？CSS3给我们带来了什么好处呢？简单的说，CSS3把很多以前需要使用图片和脚本来实现的效果、甚至动画效果，只需要短短几行代码就能搞定。比如圆角，图片边框，文字阴影和盒阴影，过渡、动画等。 CSS3边框 圆角效果 border-radius123border-radius:10px; /* 所有角都使用半径为10px的圆角 */border-radius: 5px 4px 3px 2px; /* 四个半径值分别是左上角、右上角、右下角和左下角，顺时针 */ 实心上半圆：方法：把高度(height)设为宽度（width）的一半，并且只设置左上角和右上角的半径与元素的高度一致（大于也是可以的）。 123456div&#123; height:50px;/*是width的一半*/ width:100px; background:#9da; border-radius:50px 50px 0 0;/*半径至少设置为height的值*/ &#125; 实心圆：方法：把宽度（width）与高度(height)值设置为一致（也就是正方形），并且四个圆角值都设置为它们值的一半。如下代码：123456div&#123; height:100px;/*与width设置一致*/ width:100px; background:#9da; border-radius:50px;/*四个圆角值都设置为宽度或高度值的一半*/ &#125; CSS3边框 阴影 box-shadow（一）1234567box-shadow: X轴偏移量//必需。水平阴影的位置，允许负值Y轴偏移量 //必需。垂直阴影的位置，允许负值[阴影模糊半径] //可选，模糊距离。[阴影扩展半径] //可选，阴影尺寸。[阴影颜色] //可选，阴影颜色。[投影方式];//inset为内部投影方式，默认为外部投影 添加多个阴影：以上的语法的介绍，就这么简单，如果添加多个阴影，只需用逗号隔开即可。如：12345.box_shadow&#123; box-shadow:4px 2px 6px #f00, -4px -2px 6px #000, 0px 0px 12px 5px #33CC00 inset;&#125; CSS3边框 阴影 box-shadow（二）1、阴影模糊半径与阴影扩展半径的区别 阴影模糊半径：此参数可选，其值只能是为正值，如果其值为0时，表示阴影不具有模糊效果，其值越大阴影的边缘就越模糊； 阴影扩展半径：此参数可选，其值可以是正负值，如果值为正，则整个阴影都延展扩大，反之值为负值时，则缩小； 2、X轴偏移量和Y轴偏移量值可以设置为负数1234567box-shadow: X轴偏移量Y轴偏移量 [阴影模糊半径] [阴影扩展半径] [阴影颜色] [投影方式]; 12345678910111213.boxshadow-outset&#123; width:100px; height:100px; box-shadow:4px 4px 6px 1px #666, 10px 10px 50px 10px #888 inset; border-radius:50px;&#125; 以上代码是个实心球，可以试下。 CSS3边框 为边框应用图片 border-image顾名思义就是为边框应用背景图片，它和我们常用的background属性比较相似。 12background:url(xx.jpg) 10px 20px no-repeat;/*这是我们的background属性与下面无关*/ 12345#border-image&#123; background:#F4FFFA; width:210px; height:210px; border:70px solid #ddd; border-image:url(borderimg.png) 70 repeat &#125; CSS3颜色 颜色之RGBARGB是一种色彩标准，是由红(R)、绿(G)、蓝(B)的变化以及相互叠加来得到各式各样的颜色。RGBA是在RGB的基础上增加了控制alpha透明度的参数。 color：rgba(R,G,B,A)以上R、G、B三个参数，正整数值的取值范围为：0 - 255。百分数值的取值范围为：0.0% - 100.0%。超出范围的数值将被截至其最接近的取值极限。并非所有浏览器都支持使用百分数值。A为透明度参数，取值在0~1之间，不可为负值。代码示例background-color:rgba(100,120,60,0.5); CSS3颜色 渐变色彩CSS3 Gradient 分为线性渐变(linear)和径向渐变(radial)。由于不同的渲染引擎实现渐变的语法不同，这里我们只针对线性渐变。第一个参数:指定渐变方向，可以用“角度”的关键词或“英文”来表示：只介绍英文： to top//从下而上 to right//从左到右 to bottom//从上而下 to left//从右到左 to top left//从左下角到右上角 to top right//从右上角到左下角 程序代码：background-image: linear-gradient /*这个地方表示渐变类型为线性渐变*/ (to left, red, orange,yellow,green,blue,indigo,violet); /*这个表示渐变方向和颜色*/]]></content>
  </entry>
  <entry>
    <title><![CDATA[前端小白Zero初识javascript]]></title>
    <url>%2F2018%2F04%2F14%2F%E5%89%8D%E7%AB%AF%E5%B0%8F%E7%99%BDZero%E5%88%9D%E8%AF%86javascript%2F</url>
    <content type="text"><![CDATA[JavaScript学习之路为什么学习JavaScript 所有主流浏览器都支持JavaScript。 目前，全世界大部分网页都使用JavaScript。 它可以让网页呈现各种动态效果。 做为一个Web开发师，如果你想提供漂亮的网页、令用户满意的上网体验，JavaScript是必不可少的工具。 如何写入JS代码只需一步操作,使用标签在HTML网页中插入JavaScript代码。注意，标签要成对出现，并把JavaScript代码写在之间， 表示在之间的是文本类型javascript是为了告诉浏览器里面的文本是属于JavaScript语言。我们还可以把HTML文件和JS代码分开,并单独创建一个JavaScript文件(简称JS文件),其文件后缀通常为.js，然后将JS代码直接写在JS文件中。注意:在JS文件中，不需要标签,直接编写JavaScript代码就可以了。JS文件不能直接运行，需嵌入到HTML文件中执行，我们需在HTML中添加如下代码，就可将JS文件嵌入HTML文件中。 JS在页面中的位置我们可以将JavaScript代码放在html文件中任何位置，但是我们一般放在网页的head或者body部分。 放在head部分最常用的方式是在页面中head部分放置script元素，浏览器解析head部分就会执行这个代码，然后才解析页面的其余部分。 放在body部分JavaScript代码在网页读取到该语句的时候就会执行。 注意: javascript作为一种脚本语言可以放在html页面中任何位置，但是浏览器解释html时是按先后顺序的，所以前面的script就先被执行。比如进行页面显示初始化的js必须放在head里面，因为初始化都要求提前进行（如给页面body设置css等）；而如果是通过事件调用执行的function那么对位置没什么要求的。 JavaScript-认识语句和符号一行的结束就被认定为语句的结束，通常在结尾加上一个分号”;”来表示语句的结束。注意: “;”分号要在英文状态下输入，同样，JS中的代码和符号都要在英文状态下输入。 虽然分号“;”也可以不写，但我们要养成编程的好习惯，记得在语句末尾写上分号。 JavaScript-注释很重要注释的作用是提高代码的可读性，帮助自己和别人阅读和理解你所编写的JavaScript代码，注释的内容不会在网页中显示。注释可分为单行注释与多行注释两种。 我们为了方便阅读，注释内容一般放到需要解释语句的结尾处或周围。 单行注释，在注释内容前加符号 “//”。例如1alert(&quot;hello&quot;);//这是单行注释 /*这是多行注释*/ JavaScript-什么是变量什么是变量? 从字面上看，变量是可变的量；从编程角度讲，变量是用于存储某种/某些数值的存储器。定义变量使用关键字var,语法如下： var 变量名变量名可以任意取名，但要遵循命名规则: 1.变量必须使用字母、下划线(_)或者美元符($)开始。 2.然后可以使用任意多个英文字母、数字、下划线(_)或者美元符($)组成。 3.不能使用JavaScript关键词与JavaScript保留字。 注意: 在JS中区分大小写，如变量mychar与myChar是不一样的，表示是两个变量。 变量虽然也可以不声明，直接使用，但不规范，需要先声明，后使用。 JavaScript-判断语句（if…else）if…else语句是在指定的条件成立时执行代码，在条件不成立时执行else后的代码。 语法: if(条件){ 条件成立时执行的代码 }else{ 条件不成立时执行的代码 }假设我们通过年龄来判断是否为成年人，如年龄大于等于18岁，是成年人，否则不是成年人。代码表示如下: 12345&lt;script type=&quot;text/javascript&quot;&gt;var myage = 18; if(myage&gt;=18) //myage&gt;=18是判断条件 &#123; document.write(&quot;你是成年人。&quot;);&#125; else //否则年龄小于18 &#123; document.write(&quot;未满18岁，你不是成年人。&quot;);&#125;` JavaScript-什么是函数函数是完成某个特定功能的一组语句。如没有函数，完成任务可能需要五行、十行、甚至更多的代码。这时我们就可以把完成特定功能的代码块放到一个函数里，直接调用这个函数，就省重复输入大量代码的麻烦。 如何定义一个函数呢？基本语法如下: 1234function 函数名()&#123; 函数代码;&#125; 说明: function定义函数的关键字。 “函数名”你为函数取的名字。 “函数代码”替换为完成特定功能的代码。 我们来编写一个实现两数相加的简单函数,并给函数起个有意义的名字：“add2”，代码如下： 1234function add2()&#123; var sum = 3 + 2; alert(sum);&#125; 函数调用: 函数定义好后，是不能自动执行的，所以需调用它,只需直接在需要的位置写函数就ok了,例如 1234&lt;form&gt;&lt;input type=&quot;button&quot;value=&quot;点击&quot; onclick=&quot;add()&quot;&gt;/*onclick为点击事件，点击按钮后触发函数*/&lt;/form&gt; 正在学Javascript顺便写点东西，复制粘贴了慕课网的解释，如果有需求，可以去慕课网学习,有点懒，对，没错，就是复制的！！你咬我啊！！QAQ]]></content>
  </entry>
  <entry>
    <title><![CDATA[第一篇博客]]></title>
    <url>%2F2018%2F04%2F13%2Ffirstblog%2F</url>
    <content type="text"><![CDATA[第一次写博客其实不是很懂Markdown语法，我就百度了一下，发现有道云笔记真的很好用，不用你懂Markdown语法，就能很简单的编辑md文件，强烈推荐。 我的第一个博客网站这是我的第一个博客网站， 它真的耗费了我好多时间，虽然它不是很完美，但是我真的很在意它，后续 我也会向大家介绍一下我的搭建过程，期间熬了三天的夜，因为我白天得上课，没有时间去弄这个。截止到昨天晚上其实我的博客都没有很完善，还有很多bug，例如：不定期崩溃，访问速度很慢，jiathis分享PC端分享没有图标等等，还有很多东西需要加，这些都需要上网去查，给大家推荐一个网站csdn,上面可以学到很多东西，还有很多前沿知识。 博客搭建过程几天前看到我同学在写博客，我感觉很好笑，现在哪有用博客的了。都啥时候了，没想到他跟我说这是他自己的博客，网站域名也是他的，通过github当做服务器来做的，当时听了一脸懵逼，啥是github，还能有自己的博客吗？不用申请域名啥的吗？不用买服务器啥的吗？刚开始就给了他一个萌新三连：啥玩意啊？咋回事啊？那咋整啊？大佬帮帮我！同样他也给了我一个大佬三连：百度啊，百度呀，百度哇，你他妈不会百度吗？好吧以上都是玩笑话，其实真相是酱紫的，我确实很羡慕他的博客，但是没好意思问他是怎么做的。于是我就开始了自己的摸索过程，首先我比较幸运的是避开了热心网友的回答，去csdn找到了比较靠谱的帖子。于是开始了我漫长的搭建博客的道路，真的是哇苦啊，第一天把Git，node.js安装上，顺便注册了个github账户，当然我以为事情很简单，就跟我想的那样那么简单，没想到啊，第二天晚上他就给了我一个下马威，文件传不到github服务器上，我找了好多的原因，各种方法都尝试了，还是不行。我当时甚至以为是我环境配错了，我甚至想把我的软件都卸载了，重装一遍，但是幸亏自己打消了这个念头，而是选择了重新找一下原因，因为我英语水平不是很高嘛，我看不太懂控制台，于是也不知道什么错误，于是自己打到百度翻译上，也没有找到，因为第二天还要上课嘛，上课的时候昏昏欲睡，不对是直接睡着了，总感觉自己是捡了芝麻，丢了西瓜。我记得这次我熬到了凌晨一点半，当时一度想到了放弃，我为啥要这么傻受这个苦啊？但是幸亏自己当时坚持了下来，因为感觉自己总是中途而废，从小到大那么多事情，于是给自己打了鸡血，不行这个博客我一定得搭建成功，就算是给自己的一个交代，于是第二天晚上我又重新尝试，找了各种案例，改了各种东西，百度翻译控制台的输出，最后发现了一个微不足道但是很致命的问题，在输入用户名和邮箱的时候，在user后面少打了个空格，导致我传不上去文件。 主题优化之路找到原因后，我改了一下控制台的代码，发现传到github代码仓库里面了，当时别提自己有多开心了，我首先跟我女票分享了一下成果，虽然她不懂，接着跟我JQuery老师分享了一下，反正当时别提自己多有成就感了，可能当时也觉得自己很厉害吧！接着之后感觉默认的博客主题好丑，于是自己百度了一下主题啥的，然后大多数人给的建议是换上next主题，这个主题可以加很多的插件啥的，感觉很厉害、。但是换上之后自己不太满意，这是啥啊，哪有他们说的那么好啊，于是我又去问度娘了（不会的就去百度，总有热心网友来回答你），虽然大多数没啥卵用，不过，我还是找到了，怎样添加next插件的帖子，我开始了我主题优化之路。包含动态背景，图标，友情链接，访问热度等等，然后我的博客开始有点样子了，可以稍微让我接受一点了。我还给它换了网站的图标，改了一下博客的名字，因为现在我还是个穷学生嘛于是就起名叫zero，也许你们不知道我为啥把我的网站改成[anothershaper.github.io],因为shaper已经被人抢注了QAQ,下面我来科普下shaper的意思，因为我很喜欢玩的一个游戏叫流放之路，里面最终boss叫shaper（中文翻译：叫做塑界者），牛逼吧，没想到吧，博主有点神经病，请体谅一下，哈哈到现在我的第一篇分享就先到这里了，如果有什么问题可以给我微博留言啥的，暂时博客还没有评论功能，以后慢慢的添加，如果喜欢可以给我个打赏哦！么么]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F04%2F09%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
